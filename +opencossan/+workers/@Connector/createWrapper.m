function createWrapper(Xobj,Nfid)
%CREATEWRAPPER This function create a wrapper for the CONNECTOR Object
% The method requires an  integer file identifie (fid) of an open file. 
%
% See Also: http://cossan.co.uk/wiki/index.php/createWrapper@Connector
%
% Author: Edoardo Patelli
% Institute for Risk and Uncertainty, University of Liverpool, UK
% email address: openengine@cossan.co.uk
% Website: http://www.cossan.co.uk

% =====================================================================
% This file is part of openCOSSAN.  The open general purpose matlab
% toolbox for numerical analysis, risk and uncertainty quantification.
%
% openCOSSAN is free software: you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License.
%
% openCOSSAN is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
%
%  You should have received a copy of the GNU General Public License
%  along with openCOSSAN.  If not, see <http://www.gnu.org/licenses/>.
% =====================================================================

%% Create a wrapper file
fprintf(Nfid, '%% CONNECTOR wrapper generated by the method @connector/createWrapper \n');
fprintf(Nfid, '%% Connector started at:');
fprintf(Nfid,'datestr(now,0)');
fprintf(Nfid, '%% Load input from file \n');



%% Execute FE code
% Load Input
fprintf(Nfid, ' load %s; \n',Xobj.SwrapperInputName);
% The input file should contains the connector 
fprintf(Nfid, ' [Xout,~,LerrorPartials,LsuccessfullExtractPartials] = Xc_to_file.run(Pinput);\n');
fprintf(Nfid, ' save %s Xout LerrorPartials LsuccessfullExtractPartials \n',Xobj.SwrapperInputName);
display('Finished connector execution at:');
fprintf(Nfid,'datestr(now,0)');